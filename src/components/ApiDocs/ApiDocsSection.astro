---
import type {
  Attribute,
  ClassMethod,
  CssCustomProperty,
  CustomElementField,
  Event,
  Slot,
} from "custom-elements-manifest";
import ApiDocsBadge from "./ApiDocsBadge.astro";
import ApiDocsDescriptionDeprecated from "./ApiDocsDescriptionDeprecated.astro";
import { marked } from "marked";

type Props = {
  title: string;
  members:
    | CustomElementField[]
    | Attribute[]
    | CssCustomProperty[]
    | Event[]
    | ClassMethod[]
    | Slot[];
};

const { members, title } = Astro.props;
const urlHash = title.replaceAll(" ", "_");
---

{
  members.length > 0 ? (
    <section class="ApiDocsSection">
      <h2 id={urlHash}>
        <a href={`#${urlHash}`}>{title}</a>
      </h2>
      <dl>
        {members.map((member) => {
          const { name, description, deprecated } = member;
          const hasAttribute = "attribute" in member;
          const hasType = "type" in member && member.type && member.type.text;
          const hasDefaultValue = "default" in member;
          const hasParameters = "parameters" in member;
          const hasReturnType = "return" in member && member.return?.type?.text;
          const hasDatasheet =
            hasAttribute ||
            hasType ||
            hasDefaultValue ||
            hasParameters ||
            hasReturnType;
          const hasDescription =
            description ||
            (typeof deprecated === "string" && deprecated !== "true");
          const hasDetails = hasDescription || hasDatasheet;
          const DescriptionTermWrapper = hasDetails ? "dt" : "p";
          const DatasheetWrapper = hasDatasheet ? "table" : "div";

          return (
            <div class="definition-item">
              <DescriptionTermWrapper
                class:list={["description-term", { deprecated }]}
              >
                {name} {deprecated ? <ApiDocsBadge flag="deprecated" /> : null}
              </DescriptionTermWrapper>
              {hasDetails ? (
                <dd>
                  {typeof deprecated === "string" && deprecated !== "true" ? (
                    <ApiDocsDescriptionDeprecated markdown={deprecated} />
                  ) : null}
                  {description ? (
                    <div
                      set:html={marked.parse(description)}
                      class="description"
                    />
                  ) : null}
                  <DatasheetWrapper>
                    {hasAttribute ? (
                      <tr>
                        <th scope="row">Attribute</th>
                        <td>{member.attribute}</td>
                      </tr>
                    ) : null}
                    {hasType ? (
                      <tr>
                        <th scope="row">Type</th>
                        <td>
                          <code>{member.type?.text}</code>
                        </td>
                      </tr>
                    ) : null}
                    {hasDefaultValue ? (
                      <tr>
                        <th scope="row">Default</th>
                        <td>
                          <code>{member.default}</code>
                        </td>
                      </tr>
                    ) : null}
                    {hasParameters ? (
                      <tr>
                        <th scope="row">Parameters</th>
                        <td>
                          <code>{member.parameters}</code>
                        </td>
                      </tr>
                    ) : null}
                    {hasReturnType ? (
                      <tr>
                        <th scope="row">Return</th>
                        <td>
                          <code>{member.return?.type?.text}</code>
                        </td>
                      </tr>
                    ) : null}
                  </DatasheetWrapper>
                </dd>
              ) : null}
            </div>
          );
        })}
      </dl>
    </section>
  ) : null
}

<style>
  .ApiDocsSection dl {
    background-color: #fff;
    border: 1px solid #eee;
    margin: 20px 0;
  }

  .ApiDocsSection h2 {
    font-size: 32px;
    font-weight: normal;
    line-height: 1.2;
    margin: 48px 0 8px;
  }

  .ApiDocsSection h2 a {
    color: inherit;
    text-decoration: inherit;
  }

  dt {
    font-size: 18px;
    margin-bottom: 20px;
  }

  .description-term.deprecated {
    text-decoration: line-through;
  }

  p.description-term {
    margin: 0;
  }

  dd {
    margin-left: 20px;
  }

  .definition-item {
    padding: 10px 20px;
  }

  .definition-item:nth-child(odd) {
    background-color: #f7f7f7;
  }

  .description {
    font-size: 15px;
    margin: 20px 0;
  }

  table {
    border-collapse: collapse;
    font-size: 14px;
  }

  th {
    padding: 2px 10px 2px 0;
    text-align: left;
    vertical-align: top;
    width: 100px;
  }

  td {
    padding: 2px 10px 2px 0;
    vertical-align: top;
  }

  code {
    color: #6b0;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
  }
</style>
