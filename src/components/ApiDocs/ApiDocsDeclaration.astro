---
import type {
  Attribute,
  ClassMember,
  ClassMethod,
  CssCustomProperty,
  CustomElement,
  CustomElementField,
  Event,
  Slot,
} from "custom-elements-manifest/schema";
import { marked } from "marked";
import ApiDocsBadge from "./ApiDocsBadge.astro";
import ApiDocsDescriptionDeprecated from "./ApiDocsDescriptionDeprecated.astro";
import ApiDocsSection from "./ApiDocsSection.astro";

interface Props {
  tagName: string;
  deprecated?: string | boolean;
  description?: string;
  fields?: CustomElementField[];
  attributes?: Attribute[];
  methods?: ClassMethod[];
  events?: Event[];
  slots?: Slot[];
  cssProps?: CssCustomProperty[];
}

const {
  tagName,
  deprecated,
  description,
  fields = [],
  attributes = [],
  methods = [],
  events = [],
  slots = [],
  cssProps = [],
} = Astro.props;
---

<div class:list={["declaration-header", { deprecated }]}>
  <code>&lt;{tagName}&gt;</code>{
    deprecated ? <ApiDocsBadge flag="deprecated" /> : null
  }
</div>
{
  typeof deprecated === "string" && deprecated !== "true" ? (
    <ApiDocsDescriptionDeprecated markdown={deprecated} />
  ) : null
}
{description ? <div set:html={marked.parse(description)} /> : null}

<ApiDocsSection title="Properties" members={fields} />
<ApiDocsSection title="Attributes" members={attributes} />
<ApiDocsSection title="Methods" members={methods} />
<ApiDocsSection title="Events" members={events} />
<ApiDocsSection title="Slots" members={slots} />
<ApiDocsSection title="Custom CSS Properties" members={cssProps} />

<style>
  .declaration-header code {
    font-size: 18px;
    font-weight: normal;
    margin: 0;
    line-height: 1.2;
  }

  .declaration-header.deprecated {
    text-decoration: line-through;
  }
</style>
