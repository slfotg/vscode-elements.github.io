---
import type {
  ClassDeclaration,
  CustomElement,
  CustomElementDeclaration,
  CustomElementField,
  Declaration,
  JavaScriptModule,
  Package,
} from 'custom-elements-manifest/schema';
import cemData from '@data/custom-elements.json';
import { Debug } from 'astro:components';
import ApiDocsMembers from './ApiDocsMembers.astro';
import ApiDocsDeclaration from './ApiDocsDeclaration.astro';

interface Props {
  element: string;
}

const { element } = Astro.props;

const getElementGroup = (name: string, pack: Package) => {
  const foundModule = pack.modules.find((m) => {
    const foundCustomElementDef = m.exports?.find(
      (e) => e.kind === 'custom-element-definition' && e.name === name
    );

    return foundCustomElementDef;
  });

  return foundModule;
};

const elementGroup = getElementGroup(element, cemData as Package);
---

{
  elementGroup?.declarations
    ? elementGroup.declarations
        .filter((d) => (d as CustomElementDeclaration).customElement)
        .map((d) => <ApiDocsDeclaration declaration={d as CustomElement} />)
    : null
}
