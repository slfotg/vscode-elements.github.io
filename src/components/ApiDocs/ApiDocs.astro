---
import ApiDocsDeclaration from "./ApiDocsDeclaration.astro";
import ApiDocsDeclarationList from "./ApiDocsDeclarationList.astro";
import { getCustomElementDeclarations } from "./data";

interface Props {
  element: string;
}

const { element } = Astro.props;
const declarations = getCustomElementDeclarations(element);
---

<div class="ApiDocs">
  <div class="ApiDocs__body">
    {
      declarations.map((d) => {
        const {
          tagName = "Unknown Element",
          deprecated = false,
          description = "",
          fields = [],
          attributes = [],
          methods = [],
          events = [],
          slots = [],
          cssProps = [],
        } = d;

        return (
          <ApiDocsDeclaration
            tagName={tagName}
            deprecated={deprecated}
            description={description}
            fields={fields}
            attributes={attributes}
            methods={methods}
            events={events}
            slots={slots}
            cssProps={cssProps}
          />
        );
      })
    }
  </div>
</div>

<style>
  .ApiDocs {
    display: flex;
  }

  .ApiDocs__toc {
    bottom: 0;
    box-sizing: border-box;
    overflow: hidden;
    padding: 20px 0 20px 20px;
    position: fixed;
    right: 32px;
    top: 0;
    width: 250px;
  }

  .ApiDocs__body {
    width: 100%;
  }
</style>

<style is:global>
  .ApiDocs .row:not(:last-child) {
    border-bottom: 1px solid #000;
  }

  .ApiDocs .groups {
    display: grid;
    grid-template-columns: 25% 25% 25% 25%;
  }

  .ApiDocs .DocsGroup {
    flex-basis: 25%;
    width: 100%;
  }

  .ApiDocs .description p:first-child {
    margin-top: 0;
  }

  .ApiDocs .description p:last-child {
    margin-bottom: 0;
  }
</style>
