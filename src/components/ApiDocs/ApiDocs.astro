---
import type {
  CustomElementDeclaration,
  Package,
} from "custom-elements-manifest/schema";
import cemData from "@data/custom-elements.json";
import ApiDocsDeclaration from "./ApiDocsDeclaration.astro";

interface Props {
  element: string;
}

const { element } = Astro.props;

const getElementGroup = (name: string, pack: Package) => {
  const foundModule = pack.modules.find((m) => {
    const foundCustomElementDef = m.exports?.find(
      (e) => e.kind === "custom-element-definition" && e.name === name
    );

    return foundCustomElementDef;
  });

  return foundModule;
};

const elementGroup = getElementGroup(element, cemData as Package);
const declarations = elementGroup?.declarations
  ? elementGroup.declarations.filter(
      (d) => (d as CustomElementDeclaration).customElement
    )
  : [];
---

<div class="ApiDocs">
  {
    declarations.map((d) => (
      <ApiDocsDeclaration declaration={d as CustomElementDeclaration} />
    ))
  }
</div>

<style is:global>
  .ApiDocs .row:not(:last-child) {
    border-bottom: 1px solid #000;
  }

  .ApiDocs .groups {
    display: grid;
    grid-template-columns: 25% 25% 25% 25%;
  }

  .ApiDocs .DocsGroup {
    flex-basis: 25%;
    width: 100%;
  }

  .ApiDocs .description p:first-child {
    margin-top: 0;
  }

  .ApiDocs .description p:last-child {
    margin-bottom: 0;
  }
</style>
